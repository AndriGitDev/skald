name: Skald Daily Dream

on:
  schedule:
    - cron: '15 3 * * *'
  workflow_dispatch:

jobs:
  generate-dream:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history so we can reset to it
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai requests stability-sdk

      - name: Run the dream script
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          STABILITY_API_KEY: ${{ secrets.STABILITY_API_KEY }}
        run: python scripts/generate_dream.py

      - name: Commit and push changes
        run: |
          git config --global user.name 'Skald Bot'
          git config --global user.email 'actions@github.com'
          
          # This new process is more robust and avoids history conflicts
          # 1. Fetch the latest remote state
          git fetch origin
          # 2. Hard reset the local main branch to match the remote main branch.
          #    This keeps the new image/json files created by our script as uncommitted changes.
          git reset --hard origin/main
          
          # 3. Add all new files (the generated image and updated json)
          git add .
          
          # 4. Commit the new dream, if there are any changes to be committed
          if ! git diff --staged --quiet; then
            git commit -m "Skald dreamt a new dream"
            # 5. Push the new commit. This will now be a clean, fast-forward push.
            git push origin main
          else
            echo "No new dream was generated, nothing to commit."
          fi